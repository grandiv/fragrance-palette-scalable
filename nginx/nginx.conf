events {
    worker_connections 1024;
}

http {
    upstream backend {
        least_conn;
        server backend.fragrance-palette.svc.cluster.local:80 max_fails=3 fail_timeout=30s;
        server backend.fragrance-palette.svc.cluster.local:80 max_fails=3 fail_timeout=30s;
        server backend.fragrance-palette.svc.cluster.local:80 max_fails=3 fail_timeout=30s;
    }

    upstream frontend {
        least_conn;
        server frontend.fragrance-palette.svc.cluster.local:80 max_fails=3 fail_timeout=30s;
        server frontend.fragrance-palette.svc.cluster.local:80 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=generate:10m rate=2r/s;

    # Caching
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=60m;

    server {
        listen 80;
        server_name yourdomain.com;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

        # Compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml text/javascript;

        # Static assets (served by CDN)
        location /static/ {
            proxy_pass http://frontend;
            proxy_cache static_cache;
            proxy_cache_valid 200 1h;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # API routes with specific rate limiting
        location /api/auth/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            limit_req zone=auth burst=10 nodelay;
        }

        location /api/formulas/generate {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            limit_req zone=generate burst=5 nodelay;
            proxy_read_timeout 300s;
        }

        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            limit_req zone=api burst=20 nodelay;
        }

        # Frontend routes
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health checks
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Monitoring endpoints
        location /metrics {
            proxy_pass http://backend/api/metrics;
            allow 10.0.0.0/8;
            deny all;
        }
    }
}