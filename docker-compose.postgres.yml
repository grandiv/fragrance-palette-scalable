version: "3.8"

services:
  postgres-master:
    image: postgres:15
    container_name: postgres-master
    environment:
      POSTGRES_DB: fragrances
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgresmaster
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: replicatorpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_master_data:/var/lib/postgresql/data
      - ./scripts/setup-master.sh:/docker-entrypoint-initdb.d/setup-master.sh
    command: |
      bash -c "
        echo 'wal_level = replica' >> /var/lib/postgresql/data/postgresql.conf
        echo 'max_wal_senders = 3' >> /var/lib/postgresql/data/postgresql.conf
        echo 'wal_keep_size = 64MB' >> /var/lib/postgresql/data/postgresql.conf
        echo 'hot_standby = on' >> /var/lib/postgresql/data/postgresql.conf
        echo 'host replication replicator 0.0.0.0/0 md5' >> /var/lib/postgresql/data/pg_hba.conf
        postgres
      "
    networks:
      - postgres-network

  postgres-replica:
    image: postgres:15
    container_name: postgres-replica
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgresmaster
      PGUSER: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    depends_on:
      - postgres-master
    command: |
      bash -c "
        until pg_isready -h postgres-master -p 5432 -U postgres; do
          echo 'Waiting for master...'
          sleep 2
        done
        
        if [ ! -f /var/lib/postgresql/data/postgresql.conf ]; then
          pg_basebackup -h postgres-master -D /var/lib/postgresql/data -U replicator -v -P -W
          echo 'standby_mode = on' >> /var/lib/postgresql/data/postgresql.conf
          echo 'primary_conninfo = \"host=postgres-master port=5432 user=replicator\"' >> /var/lib/postgresql/data/postgresql.conf
          echo 'hot_standby = on' >> /var/lib/postgresql/data/postgresql.conf
          touch /var/lib/postgresql/data/standby.signal
        fi
        
        postgres
      "
    networks:
      - postgres-network

volumes:
  postgres_master_data:
  postgres_replica_data:

networks:
  postgres-network:
    driver: bridge
