apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-master
  namespace: fragrance-palette
spec:
  serviceName: postgres-master
  replicas: 1
  selector:
    matchLabels:
      app: postgres-master
  template:
    metadata:
      labels:
        app: postgres-master
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: fragrances
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: POSTGRES_REPLICATION_USER
              value: replicator
            - name: POSTGRES_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: replication-password
          command:
            - /bin/bash
            - -c
            - |
              # Initialize database if needed
              if [ ! -f /var/lib/postgresql/data/postgresql.conf ]; then
                initdb
              fi

              # Performance tuning
              echo "# Performance settings" >> /var/lib/postgresql/data/postgresql.conf
              echo "shared_buffers = 256MB" >> /var/lib/postgresql/data/postgresql.conf
              echo "effective_cache_size = 1GB" >> /var/lib/postgresql/data/postgresql.conf
              echo "maintenance_work_mem = 64MB" >> /var/lib/postgresql/data/postgresql.conf
              echo "checkpoint_completion_target = 0.9" >> /var/lib/postgresql/data/postgresql.conf
              echo "work_mem = 4MB" >> /var/lib/postgresql/data/postgresql.conf
              echo "random_page_cost = 1.1" >> /var/lib/postgresql/data/postgresql.conf

              # Connection settings
              echo "max_connections = 100" >> /var/lib/postgresql/data/postgresql.conf
              echo "superuser_reserved_connections = 3" >> /var/lib/postgresql/data/postgresql.conf

              # Replication settings
              echo "wal_level = replica" >> /var/lib/postgresql/data/postgresql.conf
              echo "max_wal_senders = 10" >> /var/lib/postgresql/data/postgresql.conf
              echo "wal_keep_size = 128MB" >> /var/lib/postgresql/data/postgresql.conf
              echo "max_replication_slots = 10" >> /var/lib/postgresql/data/postgresql.conf
              echo "hot_standby = on" >> /var/lib/postgresql/data/postgresql.conf
              echo "hot_standby_feedback = on" >> /var/lib/postgresql/data/postgresql.conf

              # Logging
              echo "log_destination = 'stderr'" >> /var/lib/postgresql/data/postgresql.conf
              echo "log_statement = 'mod'" >> /var/lib/postgresql/data/postgresql.conf
              echo "log_min_duration_statement = 1000" >> /var/lib/postgresql/data/postgresql.conf

              # Security
              echo "host replication replicator 0.0.0.0/0 md5" >> /var/lib/postgresql/data/pg_hba.conf
              echo "host all all 0.0.0.0/0 md5" >> /var/lib/postgresql/data/pg_hba.conf

              # Create replication user
              postgres &
              sleep 10
              psql -U postgres -d fragrances -c "CREATE USER replicator REPLICATION LOGIN ENCRYPTED PASSWORD '$POSTGRES_REPLICATION_PASSWORD';" || true

              # Create replication slot
              psql -U postgres -d fragrances -c "SELECT pg_create_physical_replication_slot('replica_slot');" || true

              wait
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U postgres
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U postgres
            initialDelaySeconds: 10
            periodSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "fast-ssd" # Use appropriate storage class
        resources:
          requests:
            storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-master
  namespace: fragrance-palette
spec:
  selector:
    app: postgres-master
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
